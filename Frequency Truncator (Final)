aud = readWave("C4.wav")

thres = 2000 #Hz
newfilename = "C4 2000.wav"

# determine duration
dur = length(left)/aud@samp.rate
dur # seconds
## [1] 7.034739

# determine sample rate
fs = as.integer(aud@samp.rate)
fs # Hz
## [1] 44100

# determine bitrate
br = as.integer(aud@bit)

# demean to remove DC offset
left.1 = left - mean(left)
df_left.1 = data.frame(left.1)


left = array(aud@left)

df_left = data.frame(left)

fleft = array(fft(left, inverse = FALSE))

df_fleft = data.frame(fleft)

d3_fleft_Mag = array(sqrt(Re(fleft)*Re(fleft) + Im(fleft)*Im(fleft)))
df_d3_fleft_Mag = data.frame(d3_fleft_Mag)


List1 = array(1:length(left))

df_List1 = data.frame(List1)


#converting cycles over the entire duration to cycles per second (hz)
freq_left = array(List1/dur) 

#Comparing frequency with amplitude
df_freq_amp_left = data.frame(freq_left,d3_fleft_Mag)

#Deleting frequencies
df_new_fleft <- df_fleft


for (i in floor(thres*dur):ceiling((length(new_fleft)-thres)*dur)) {
  df_new_fleft[i,1] <- 0
}

new_fleft = array(df_new_fleft[,1])

#converting to wave file
ifleft = array(fft(new_fleft, inverse = TRUE)/length(new_fleft)) 
df_ifleft = data.frame(ifleft)

#ifleft2 = array(fft(fleft, inverse = TRUE)/length(fleft)) 
#df_ifleft2 = data.frame(ifleft2)


#ifleft_mag = array(sqrt(Re(ifleft)*Re(ifleft) + Im(ifleft)*Im(ifleft)))
#df_ifleft_mag = data.frame(ifleft_mag)


new_left = array(Re(ifleft))
df_new_left = data.frame(Re(ifleft))



rnew_left = round(new_left)
num_left = as.integer(rnew_left)
df_num_left = data.frame(num_left)

#new_aud = Wave(left = num_left, right = num_right, samp.rate = fs, bit = br)

#writeWave(new_aud, 'New C4.wav', extensible = FALSE)

new_aud = Wave(left = num_left, right = num_left, samp.rate = fs, bit = br)
writeWave(new_aud, newfilename, extensible = FALSE)


#df_left_ifleft_compare = data.frame(left, ifleft, ifleft_mag, num_left)
